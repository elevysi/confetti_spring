<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.elevysi.site.blog</groupId>
	<artifactId>BlogBoot</artifactId>
	<name>Blog</name>
	<packaging>jar</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Docker build Config -->
		<docker.image.name>elevysi/blog</docker.image.name>
    	<docker.image.tag>1.0.1</docker.image.tag>
    	
    	<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<apache.tiles>3.0.5</apache.tiles>
	</properties>
	
	
	<dependencies>
		<!-- Core Dependencies -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Security -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-security</artifactId>
			<version>1.2.1.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		
		
		<!-- Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		
		<!-- Servlet -->
		<!--https://www.mkyong.com/spring-boot/spring-boot-hello-world-example-jsp/  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- JSTL for JSP -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- Need this to compile JSP -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Need this to compile JSP,
			tomcat-embed-jasper version is not working, no idea why -->
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version>
			<scope>provided</scope>
		</dependency>
		
	    
	    
	    <!-- Spring Cloud Client -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
			<version>1.4.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
			<version>1.4.2.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-feign</artifactId>
			<version>1.4.2.RELEASE</version>
		</dependency>
		
		
		<!-- <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.1.Final</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.9.0.RELEASE</version>
		</dependency> -->
		
		<!-- CGLIB is required to process @Configuration classes -->
		<!-- <dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.1</version>
		</dependency> -->

		<!-- SpringSecurity dependencies -->
		<!-- <dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency> -->
		
		

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		
	
		<!-- Test -->
		<!-- <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency> -->
		
		<!-- <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-core</artifactId>
	        <version>${org.springframework-version}</version>
	        <scope>test</scope>
    	</dependency> -->
    	
		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework-version}</version>
		</dependency> -->




		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${apache.tiles}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${apache.tiles}</version>
		</dependency>
		
		<!-- File Upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		
		<!-- 		REST -->
		<!-- <dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency> -->
		
		<!-- Jackson JSON Processor -->
		
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>2.8.1</version>
	</dependency>
	
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.8.1</version>
	</dependency>

	<dependency>
		<groupId>com.fasterxml.jackson.datatype</groupId>
		<artifactId>jackson-datatype-hibernate5</artifactId>
		<version>2.8.1</version>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.ws</groupId>
		<artifactId>spring-ws-core</artifactId>
		<version>3.0.0.RELEASE</version>
	</dependency>


	<!-- For the ModelMapper -->
	<dependency>
		<groupId>com.github.jmnarloch</groupId>
		<artifactId>modelmapper-spring-boot-starter</artifactId>
		<version>1.1.0</version>
	</dependency>


	</dependencies>
    <build>
    
    	
    
        <plugins>
            
            <!-- DOC https://bsorrentino.github.io/maven-annotation-plugin/usage.html -->
            
            <plugin>
            	<groupId>org.bsc.maven</groupId>
            	<artifactId>maven-processor-plugin</artifactId>
            	<version>3.1.0-beta1</version>
            	
            	<executions>
            		
            		<execution>
			            <id>process</id>
			            <phase>generate-sources</phase>
			            <goals>
			              <goal>process</goal>
			            </goals>
			           
			            <configuration>
			            	<outputDirectory>${project.build.directory}/generated-sources/metamodel</outputDirectory>
			            	<processors>
			            		<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
			            	</processors>
			            	<overwrite>true</overwrite>
			            </configuration>
			          </execution>
            	
            	</executions>
            	
            	<dependencies>
            		<dependency>
            			<groupId>org.hibernate</groupId>
            			<artifactId>hibernate-jpamodelgen</artifactId>
            			<version>5.0.1.Final</version>
            		</dependency>
           		</dependencies>
            	
            	
            </plugin>
            
            <plugin>
            	<groupId>org.jvnet.jaxb2.maven2</groupId>
            	<artifactId>maven-jaxb2-plugin</artifactId>
            	<version>0.13.3</version>
            	<executions>
            		<execution>
            			<goals>
            				<goal>generate</goal>
            			</goals>
            		</execution>
            	</executions>
            	<!-- <configuration>
            		<schemaLanguage>WSDL</schemaLanguage>
            		<generatePackage>com.elevysi.site.ws.shop.soap.consumer</generatePackage>
            		<forceRegenerate>true</forceRegenerate>
            		<schemas>
            			<schema>
            				<url>http://localhost:8300/ws/articleDetailsWsdl.wsdl</url>
            			</schema>
            		</schemas>
            		<schemaDirectory>${project.basedir}/src/main/resources/ws/soap/wsdl</schemaDirectory>
            		<schemaIncludes>
            			<include>*.wsdl</include>
            		</schemaIncludes>
            	</configuration> -->
            	
            </plugin>
		
			<!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts actual JAR filename -->
      		<!-- The final Dockerfile will be created in target/dockerfile/Dockerfile -->
			<plugin>
		        <artifactId>maven-resources-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>copy-resources</id>
		            <!-- here the phase you need -->
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>${basedir}/target/dockerfile</outputDirectory>
		              <resources>
		                <resource>
		                  <directory>src/main/docker</directory>
		                  <filtering>true</filtering>
		                </resource>
		              </resources>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
		      <plugin>
		        <groupId>com.spotify</groupId>
		        <artifactId>docker-maven-plugin</artifactId>
		        <version>0.4.10</version>
		        <configuration>
		          <imageName>${docker.image.name}:${docker.image.tag}</imageName>
		          <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
		          <resources>
		            <resource>
		              <targetPath>/</targetPath>
		              <directory>${project.build.directory}</directory>
		              <include>${project.build.finalName}.jar</include>
		            </resource>
		          </resources>
		        </configuration>
		      </plugin>
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

        </plugins>
    </build>
</project>
