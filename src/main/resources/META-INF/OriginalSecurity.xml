<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
		
	<global-method-security pre-post-annotations="enabled" />
	
	
	<!-- Configuring RoleVoter bean to use custom access roles, by default roles 
        should be in the form ROLE_{XXX} -->
    <!-- <beans:bean id="roleVoter"
        class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""></beans:property>
    </beans:bean>
 
    <beans:bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters"
            ref="roleVoter" />
    </beans:bean> -->
	
	
	<!-- <http authentication-manager-ref="dao-auth"> 
        
        <form-login login-page="/login" authentication-failure-url="/denied"
            username-parameter="username" password-parameter="password"
            default-target-url="/home" />
        <logout invalidate-session="true" logout-success-url="/login"
            logout-url="/j_spring_security_logout" />
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1"
                expired-url="/login" />
        </session-management>
    </http> -->
    
    
    <!-- <http pattern="/resources" security="none" />
	
	<http auto-config="true"  use-expressions="true" authentication-manager-ref="dao-auth">
		<intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/logout" access="permitAll"/>
		<intercept-url pattern="/denied" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/" access="hasRole('ROLE_USER')"/>
		
		<form-login login-page="/login" 
			authentication-failure-url="/login/failure" 
			default-target-url="/"/>
		
		<access-denied-handler error-page="/denied"/>
		
		<logout invalidate-session="true" 
			logout-success-url="/logout/success" 
			logout-url="/logout"/>
	</http> -->
	
	<http auto-config="true"  use-expressions="true" authentication-manager-ref="dao-auth">
		<intercept-url pattern="/login/*" access="isAnonymous()" />
		<intercept-url pattern="/register" access="! isAuthenticated()" />
		<intercept-url pattern="/blog/*" access="isAuthenticated()" />
		<intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/profile/*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/moderator/*" access="hasRole('ROLE_MODERATOR')" />
		
		
		<form-login login-page="/login" 
			authentication-failure-url="/login/failure" 
			default-target-url="/successlogin"
			login-processing-url="/login"
		    password-parameter="password"
		    username-parameter="username"
			/>
			
		<access-denied-handler error-page="/denied"/>
		
		<logout invalidate-session="true" 
			logout-success-url="/logout/success" 
			logout-url="/logout"/>
		<csrf disabled="true"/>
		
		<access-denied-handler error-page="/denied"/>
		
	</http>
	
	<authentication-manager  id="dao-auth">
	        <authentication-provider user-service-ref="customUserDetailsService">
	        	<password-encoder hash="bcrypt"></password-encoder>
	        </authentication-provider>
	</authentication-manager>
	
	<authentication-manager>
		<authentication-provider>
		
		
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="select username, password, active from users where username = ?"
				authorities-by-username-query="select username,role from Roles where username = ?" 
			/>
		</authentication-provider>
	</authentication-manager>
	
    
    
    <beans:bean id="userDetailsService"
        class="com.elevysi.site.service.CustomUserDetailsService" />
 
 
    <authentication-manager id="jdbc-auth">
    
        <authentication-provider>
        
        	<password-encoder hash="bcrypt"></password-encoder>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select username,password,enabled from users where username = ?"
                authorities-by-username-query="select username,role from roles where username = ?" />
        </authentication-provider>
    </authentication-manager>
	
	
</beans:beans>