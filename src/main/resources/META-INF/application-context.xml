<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
     
    <!-- Enables the Spring MVC @Controller programming model -->
    <tx:annotation-driven/>
	<!-- <security:global-method-security 
    secured-annotations="enabled"
    jsr250-annotations="enabled"
    pre-post-annotations="enabled"/> -->
	
	
	<context:component-scan base-package="com.elevysi.site">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	
	
	
	<jpa:repositories base-package="com.elevysi.site.repository" />
	
	<!--  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="packagesToScan" value="com.elevysi.site.entity" />
	    <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
	    <property name="loadTimeWeaver">
	      <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
	    </property>
	    <property name="jpaProperties">
	      <props>
	        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
	        <prop key="hibernate.max_fetch_depth">3</prop>
	        <prop key="hibernate.jdbc.fetch_size">50</prop>
	        <prop key="hibernate.jdbc.batch_size">10</prop>
	        <prop key="hibernate.show_sql">true</prop>
	      </props>
    	</property>
	    
	  </bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean> -->
	
	
	<!-- This bean is defined in both Application-context and Dispatcher Servlet
	Because in Dispatcher servlet we scan controller, so the properties file will be defined in controllers, @Value will be retrieved
	In Application context we scan everything except controllers, so @Value can only be in other components other than Controller -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:META-INF\application.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Task Schedulers  -->
	
	<bean id="jobsBatch" class="com.elevysi.site.component.JobsBatch" />
	<task:scheduled-tasks>
		<task:scheduled ref="jobsBatch" method="run" cron="0 */10 * * * *"/>
	</task:scheduled-tasks>
	<!-- <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" c:_-ref="connectionFactory"/> -->
	
	
</beans>